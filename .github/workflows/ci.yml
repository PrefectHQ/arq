name: CI

on:
  push:
    branches:
      - main
      - feature/ci
    tags:
      - '**'
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - run: pip install -r requirements/linting.txt -r requirements/pyproject.txt pre-commit

    - run: pre-commit run -a

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - run: pip install -r requirements/docs.txt -r requirements/pyproject.txt
    - run: pip install .

    - run: make docs

    - name: Store docs site
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/_build/

  test-cluster:
    name: test py${{ matrix.python }} with redis-cluster:${{ matrix.redis }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python: ['3.8', '3.9', '3.10', '3.11']
        redis: ['6']
        include:
          - python: '3.10'
            redis: '6'
            os: 'ubuntu'
          - python: '3.10'
            redis: '7'
            os: 'ubuntu'

    env:
      PYTHON: ${{ matrix.python }}
      OS: ${{ matrix.os }}
      CLUSTER_MODE: ${{ true }}
      PYTHONASYNCIODEBUG: 1

    runs-on: ${{ format('{0}-latest', matrix.os) }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup cluster
      run:  docker-compose -f "docker-compose.yml" up -d --build

    - name: Redis Cluster Health Check
      run: |
         sudo apt-get install -y redis-tools
         sleep 30
         redis-cli -h 127.0.0.1 -p 6379 ping
         redis-cli -h 127.0.0.1 -p 6379 cluster nodes
         redis-cli -h 127.0.0.1 -p 6379 cluster info

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - run: pip install -r requirements/testing.txt -r requirements/pyproject.txt

    - run: make test

    - run: coverage xml

    - uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        env_vars: PYTHON,OS

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down
